#!/bin/bash
# Functions related to running stuff.

# TODO: replace this with use of the gui funcs.
# Implementation of file selection. The runner rebinds select_game to this.
_select_file () {
    file=$(yad --center --undecorated --list --no-headers --separator "" \
     --print-column 1 --hide-column 1 --column "File" --column "Name" "$@")
    [[ $? -eq 0 ]] || die "Canceled."
}

# Returns 0 if currently in the extra x server.
in_xinit () { [[ "${DISPLAY:-}" == "${xinit_display:-:5}" ]]; }

# Returns 0 if the dgpu is currently in use. Could be smarter about it.
in_dgpu () {
    pgrep glxoffload || pgrep optirun || \
     pgrep -f primusrun || [[ "${DRI_PRIME:-}" ]]
}

# Overrides dgpu variable to off if on battery.
check_dgpu () {
    dgpu=${dgpu:-no}
    [[ "${dgpu,,}" == "force" || "$dgpu" == "2" ]] && { dgpu=yes; return 0; }
    check_power || dgpu=no
}

write_env () {
    echo > "/run/user/$UID/arcadia/env" <<EOF
export DISPLAY="${DISPLAY:-}"
export XAUTHORITY="${XAUTHORITY:-}"
export PULSE_SERVER="${PULSE_SERVER:-}"
EOF
}

# Disable compositor on various WMs if compositing is enabled.
stop_compositor () {
    is "${disable_compositor:-}" || return 0
    if pgrep compton; then
        compositor=compton
        compton_args=($(<"/proc/$(pgrep -n compton)/cmdline"))
        pkill compton
    elif pgrep xfwm4; then
        if is "$(xfconf-query -c xfwm4 -p /general/use_compositing)"; then
            compositor=xfwm4
            xfconf-query -c xfwm4 -p /general/use_compositing -t bool -s false
        fi
    # TODO: More WMs
    fi
}

# Restart compositor based on what was found in stop_compositor.
restart_compositor () {
    is "${disable_compositor:-}" || return 0
    case "${compositor:-}" in
        compton) "${compton_args[@]}" & disown ;;
        xfwm4)
            xfconf-query -c xfwm4 -p /general/use_compositing -t bool -s true ;;
        # TODO: More WMs
    esac
}

# Activate padfiler functionality if it's installed.
start_padfiler () {
    if [[ "${padfile:-}" ]] && bin padfiler; then
        debug_print "Starting padfiler: ${padfile:-} ${padfile2:-}"
        padfiler start "${padfile:-}" "${padfile2:-}"
    else
        if [[ "${lock_js:-}" ]]; then padfiler lock-js; fi
        if [[ "${lock_event:-}" ]]; then padfiler lock-event; fi
    fi
}

stop_padfiler () {
    if [[ "${padfile:-}" ]] && bin padfiler; then
        debug_print "Stopping padfiler"
        padfiler stop
    elif [[ "${lock_js:-}${lock_event:-}" ]]; then padfiler unlock
    fi
}

start_window_watchers () {
    if [[ -d "${devilspie2_dir:-}" ]]; then
        debug_print "Starting devilspie2 in ${devilspie2_dir:-}"
        bin devilspie2 -f "${devilspie2_dir:-}" &
        devilspie2_pid=$!
    elif [[ -f "${kpie_file:-}" ]]; then
        debug_print "Starting kpie with ${kpie_file:-}"
        bin kpie "${kpie_file:-}" &
        kpie_pid=$!
    fi
    return 0
}
stop_window_watchers () { kill "${devilspie2_pid:-}" "${kpie_pid:-}" || true; }
